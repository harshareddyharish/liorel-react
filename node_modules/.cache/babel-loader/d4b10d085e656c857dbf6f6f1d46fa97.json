{"ast":null,"code":"var _jsxFileName = \"/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button } from 'antd';\nimport Api from '../services/api';\nimport UserModal from '../src/components/UserModal';\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined);\n  const [openUserModal, toggleUserModal] = useState(false);\n  const [user, updateUser] = useState(undefined);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure);\n  };\n\n  const onSuccess = response => {\n    updateUsers(response.data['users']);\n  };\n\n  const onFailure = error => {\n    message.error('Failed to fetch users');\n  };\n\n  const closeModal = () => {\n    toggleUserModal(false);\n    updateUser(undefined);\n  };\n\n  const columns = () => {\n    let list = [];\n    list.push({\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name'\n    });\n    list.push({\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name'\n    });\n    list.push({\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    });\n    list.push({\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address'\n    });\n    list.push({\n      title: 'City',\n      dataIndex: 'city',\n      key: 'city'\n    });\n    list.push({\n      title: 'State',\n      dataIndex: 'state',\n      key: 'state'\n    });\n    list.push({\n      title: 'Zip',\n      dataIndex: 'zip',\n      key: 'zip'\n    });\n    list.push({\n      title: 'Tags',\n      dataIndex: 'tags',\n      key: 'tags'\n    });\n    list.push({\n      title: 'Action',\n      render: record => {\n        return /*#__PURE__*/React.createElement(Button, {\n          type: \"link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }\n        }, \"Edit\");\n      }\n    });\n    return list;\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mb: \"20px\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 49\n    }\n  }, \"Add User\")), users && /*#__PURE__*/React.createElement(Table, {\n    columns: columns(),\n    dataSource: users,\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), openUserModal && /*#__PURE__*/React.createElement(UserModal, {\n    user: user,\n    tags: tags,\n    closeModal: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default UsersPage;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js"],"names":["React","useState","useEffect","Flex","Box","Table","message","Button","Api","UserModal","UsersPage","users","updateUsers","undefined","openUserModal","toggleUserModal","user","updateUser","fetchUsers","onSuccess","onFailure","response","data","error","closeModal","columns","list","push","title","dataIndex","key","render","record","tags"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button } from 'antd';\nimport Api from '../services/api';\nimport UserModal from '../src/components/UserModal';\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined)\n  const [openUserModal, toggleUserModal] = useState(false)\n  const [user, updateUser] = useState(undefined)\n\n  useEffect(() => {\n    fetchUsers()\n  }, [])\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure)\n  }\n\n  const onSuccess = (response) => {\n    updateUsers(response.data['users'])\n  }\n\n  const onFailure = (error) => {\n    message.error('Failed to fetch users')\n  }\n\n  const closeModal = () => {\n    toggleUserModal(false)\n    updateUser(undefined)\n  }\n\n  const columns = () => {\n    let list = []\n    list.push({\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name'\n    })\n    list.push({\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name'\n    })\n    list.push({\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    })\n    list.push({\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address'\n    })\n    list.push({\n      title: 'City',\n      dataIndex: 'city',\n      key: 'city'\n    })\n    list.push({\n      title: 'State',\n      dataIndex: 'state',\n      key: 'state'\n    })\n    list.push({\n      title: 'Zip',\n      dataIndex: 'zip',\n      key: 'zip'\n    })\n    list.push({\n      title: 'Tags',\n      dataIndex: 'tags',\n      key: 'tags'\n    })\n    list.push({\n      title: 'Action',\n      render: (record) => {\n        return <Button type='link'>Edit</Button>\n      }\n    })\n    return list\n  }\n\n  if (!users) { return null }\n\n  return(\n    <Box>\n      <Flex mb='20px' justifyContent='flex-end'><Button type='primary'>Add User</Button></Flex>\n      {users && <Table columns={columns()} dataSource={users} pagination={false} />}\n      {openUserModal && <UserModal user={user} tags={tags} closeModal={closeModal} />}\n    </Box>  \n  )\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}