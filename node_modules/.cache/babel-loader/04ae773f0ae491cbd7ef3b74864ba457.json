{"ast":null,"code":"var _jsxFileName = \"/Users/ekincare/Desktop/harish/liorel-react/src/components/UserModal.js\";\nimport React, { useState } from \"react\";\nimport { Modal, Input, Select, message } from \"antd\";\nimport Api from \"../services/api\";\nconst {\n  Option\n} = Select;\n\nconst UserModal = ({\n  user = {},\n  tags = [],\n  closeModal,\n  onSaveUser\n}) => {\n  const [first_name, updateFname] = useState(user[\"first_name\"] || undefined);\n  const [last_name, updateLname] = useState(user[\"last_name\"] || undefined);\n  const [email, updateEmail] = useState(user[\"email\"] || undefined);\n  const [address, updateAddress] = useState(user[\"address\"] || undefined);\n  const [city, updateCity] = useState(user[\"city\"] || undefined);\n  const [state, updateState] = useState(user[\"state\"] || undefined);\n  const [zip, updateZip] = useState(user[\"zip\"] || undefined);\n  const [user_tags, updateTags] = useState(user['tags'] || []);\n\n  const saveUser = () => {\n    Api.createUser({\n      data: requestBody()\n    }, onSuccess, onFailure);\n  };\n\n  const onSuccess = response => {\n    message.success(\"User saved successfully\");\n    onSaveUser();\n  };\n\n  const onFailure = error => {\n    if (error.response.data) {\n      message.error(error.response.data['message']);\n    } else {\n      message.error('Failed to save user');\n    }\n  };\n\n  const requestBody = () => {\n    let body = {\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      address: address,\n      city: city,\n      state: state,\n      zip: zip,\n      tags: tags\n    };\n\n    if (user[\"id\"]) {\n      body[\"id\"] = user[\"id\"];\n    }\n\n    return {\n      user: body\n    };\n  };\n\n  const onChange = (key, e) => {\n    if (key === \"fname\") {\n      updateFname(e.target.value);\n    } else if (key === \"lname\") {\n      updateLname(e.target.value);\n    } else if (key === \"email\") {\n      updateEmail(e.target.value);\n    } else if (key === \"address\") {\n      updateAddress(e.target.value);\n    } else if (key === \"city\") {\n      updateCity(e.target.value);\n    } else if (key === \"state\") {\n      updateState(e.target.value);\n    } else if (key === \"zip\") {\n      updateZip(e.target.value);\n    }\n  };\n\n  const onTagsChange = tags => {\n    let newTags = user_tags.slice(0);\n    let set = newTags.concat(tags);\n    let uniqueSet = [...new Set(set)];\n    updateTags(uniqueSet);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: true,\n    title: user[\"id\"] ? \"Update User\" : \"Add User\",\n    onOk: saveUser,\n    onCancel: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"First Name\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"fname\", e),\n    value: first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Last Name\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"lname\", e),\n    value: last_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Email\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"email\", e),\n    value: email,\n    disabled: user[\"id\"] ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Address\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"address\", e),\n    value: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"City\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"city\", e),\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"State\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"state\", e),\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Zip\",\n    style: {\n      marginBottom: 20,\n      height: 40\n    },\n    onChange: e => onChange(\"zip\", e),\n    value: zip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    placeholder: \"Tags\",\n    value: user_tags,\n    style: {\n      width: \"100%\",\n      height: 40\n    },\n    onChange: onTagsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, tags.map(tag => /*#__PURE__*/React.createElement(Option, {\n    value: tag.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, tag.name))));\n};\n\nexport default UserModal;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/components/UserModal.js"],"names":["React","useState","Modal","Input","Select","message","Api","Option","UserModal","user","tags","closeModal","onSaveUser","first_name","updateFname","undefined","last_name","updateLname","email","updateEmail","address","updateAddress","city","updateCity","state","updateState","zip","updateZip","user_tags","updateTags","saveUser","createUser","data","requestBody","onSuccess","onFailure","response","success","error","body","onChange","key","e","target","value","onTagsChange","newTags","slice","set","concat","uniqueSet","Set","marginBottom","height","width","map","tag","id","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Input, Select, message } from \"antd\";\nimport Api from \"../services/api\";\n\nconst { Option } = Select;\n\nconst UserModal = ({ user = {}, tags = [], closeModal, onSaveUser }) => {\n  const [first_name, updateFname] = useState(user[\"first_name\"] || undefined);\n  const [last_name, updateLname] = useState(user[\"last_name\"] || undefined);\n  const [email, updateEmail] = useState(user[\"email\"] || undefined);\n  const [address, updateAddress] = useState(user[\"address\"] || undefined);\n  const [city, updateCity] = useState(user[\"city\"] || undefined);\n  const [state, updateState] = useState(user[\"state\"] || undefined);\n  const [zip, updateZip] = useState(user[\"zip\"] || undefined);\n  const [user_tags, updateTags] = useState(user['tags'] || []);\n\n  const saveUser = () => {\n    Api.createUser({ data: requestBody() }, onSuccess, onFailure);\n  };\n\n  const onSuccess = (response) => {\n    message.success(\"User saved successfully\");\n    onSaveUser()\n  };\n\n  const onFailure = (error) => {\n  \tif (error.response.data) {\n    \tmessage.error(error.response.data['message']);\n    } else { \n    \tmessage.error('Failed to save user')\n    }\t\n  };\n\n  const requestBody = () => {\n    let body = {\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      address: address,\n      city: city,\n      state: state,\n      zip: zip,\n      tags: tags,\n    };\n    if (user[\"id\"]) {\n      body[\"id\"] = user[\"id\"];\n    }\n    return { user: body };\n  };\n\n  const onChange = (key, e) => {\n    if (key === \"fname\") {\n      updateFname(e.target.value);\n    } else if (key === \"lname\") {\n      updateLname(e.target.value);\n    } else if (key === \"email\") {\n      updateEmail(e.target.value);\n    } else if (key === \"address\") {\n      updateAddress(e.target.value);\n    } else if (key === \"city\") {\n      updateCity(e.target.value);\n    } else if (key === \"state\") {\n      updateState(e.target.value);\n    } else if (key === \"zip\") {\n      updateZip(e.target.value);\n    }\n  };\n\n  const onTagsChange = (tags) => {\n  \tlet newTags = user_tags.slice(0)\n  \tlet set = newTags.concat(tags)\n  \tlet uniqueSet = [...new Set(set)];\n  \tupdateTags(uniqueSet)\n  };\n\n  return (\n    <Modal\n      visible={true}\n      title={user[\"id\"] ? \"Update User\" : \"Add User\"}\n      onOk={saveUser}\n      onCancel={closeModal}\n    >\n      <Input\n        type=\"text\"\n        placeholder=\"First Name\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"fname\", e)}\n        value={first_name}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"Last Name\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"lname\", e)}\n        value={last_name}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"Email\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"email\", e)}\n        value={email}\n        disabled={user[\"id\"] ? true : false}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"Address\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"address\", e)}\n        value={address}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"City\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"city\", e)}\n        value={city}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"State\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"state\", e)}\n        value={state}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"Zip\"\n        style={{ marginBottom: 20, height: 40 }}\n        onChange={(e) => onChange(\"zip\", e)}\n        value={zip}\n      />\n      <Select\n        mode=\"multiple\"\n        placeholder=\"Tags\"\n        value={user_tags}\n        style={{ width: \"100%\", height: 40 }}\n        onChange={onTagsChange}\n      >\n        {tags.map((tag) => (\n          <Option value={tag.id}>{tag.name}</Option>\n        ))}\n      </Select>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n"]},"metadata":{},"sourceType":"module"}