{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"../Auth\";\nimport { HOST } from \"../Url\";\n\nconst request = (options, onSuccess, onError) => {\n  const {\n    headers,\n    ...restOptions\n  } = options;\n  const client = axios.create({\n    baseURL: HOST,\n    headers: {\n      source: \"admin\",\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      accept: \"application/json\",\n      \"x-ekincare-key\": getToken(),\n      ...headers\n    }\n  });\n  options = { ...restOptions\n  };\n  const requestPromise = client(options);\n\n  if (onSuccess) {\n    return requestPromise.then(onSuccess).catch((error, ...rest) => {\n      onError(error);\n    });\n  }\n\n  return requestPromise;\n};\n\nexport default request;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/utils/request.js"],"names":["axios","getToken","HOST","request","options","onSuccess","onError","headers","restOptions","client","create","baseURL","source","accept","requestPromise","then","catch","error","rest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,OAAD,EAAUC,SAAV,EAAqBC,OAArB,KAAiC;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAW,OAAGC;AAAd,MAA8BJ,OAApC;AACA,QAAMK,MAAM,GAAGT,KAAK,CAACU,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,IADiB;AAE1BK,IAAAA,OAAO,EAAE;AACPK,MAAAA,MAAM,EAAE,OADD;AAEP,sBAAgB,gCAFT;AAGPC,MAAAA,MAAM,EAAE,kBAHD;AAIP,wBAAkBZ,QAAQ,EAJnB;AAKP,SAAGM;AALI;AAFiB,GAAb,CAAf;AAWAH,EAAAA,OAAO,GAAG,EACR,GAAGI;AADK,GAAV;AAIA,QAAMM,cAAc,GAAGL,MAAM,CAACL,OAAD,CAA7B;;AACA,MAAIC,SAAJ,EAAe;AACb,WAAOS,cAAc,CAACC,IAAf,CAAoBV,SAApB,EAA+BW,KAA/B,CAAqC,CAACC,KAAD,EAAQ,GAAGC,IAAX,KAAoB;AAC9DZ,MAAAA,OAAO,CAACW,KAAD,CAAP;AACD,KAFM,CAAP;AAGD;;AACD,SAAOH,cAAP;AACD,CAxBD;;AA0BA,eAAeX,OAAf","sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"../Auth\";\nimport { HOST } from \"../Url\";\n\nconst request = (options, onSuccess, onError) => {\n  const { headers, ...restOptions } = options;\n  const client = axios.create({\n    baseURL: HOST,\n    headers: {\n      source: \"admin\",\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      accept: \"application/json\",\n      \"x-ekincare-key\": getToken(),\n      ...headers\n    }\n  });\n\n  options = {\n    ...restOptions\n  };\n\n  const requestPromise = client(options);\n  if (onSuccess) {\n    return requestPromise.then(onSuccess).catch((error, ...rest) => {\n      onError(error);\n    });\n  }\n  return requestPromise;\n};\n\nexport default request;\n"]},"metadata":{},"sourceType":"module"}