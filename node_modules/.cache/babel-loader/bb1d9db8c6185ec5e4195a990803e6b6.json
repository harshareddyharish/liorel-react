{"ast":null,"code":"var _jsxFileName = \"/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button } from 'antd';\nimport Api from '../services/api';\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure);\n  };\n\n  const onSuccess = response => {\n    updateUsers(response.data['users']);\n  };\n\n  const onFailure = error => {\n    message.error('Failed to fetch users');\n  };\n\n  const columns = () => {\n    let list = [];\n    list.push({\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name'\n    });\n    list.push({\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name'\n    });\n    list.push({\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    });\n    list.push({\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address'\n    });\n    list.push({\n      title: 'City',\n      dataIndex: 'city',\n      key: 'city'\n    });\n    list.push({\n      title: 'State',\n      dataIndex: 'state',\n      key: 'state'\n    });\n    list.push({\n      title: 'Zip',\n      dataIndex: 'zip',\n      key: 'zip'\n    });\n    list.push({\n      title: 'Tags',\n      dataIndex: 'tags',\n      key: 'tags'\n    });\n    list.push({\n      title: 'Action',\n      render: record => {\n        return /*#__PURE__*/React.createElement(Button, {\n          type: \"link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 16\n          }\n        }, \"Edit\");\n      }\n    });\n    return list;\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns(),\n    dataSource: users,\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default UsersPage;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js"],"names":["React","useState","useEffect","Flex","Box","Table","message","Button","Api","UsersPage","users","updateUsers","undefined","fetchUsers","onSuccess","onFailure","response","data","error","columns","list","push","title","dataIndex","key","render","record"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button } from 'antd';\nimport Api from '../services/api';\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined)\n\n  useEffect(() => {\n    fetchUsers()\n  }, [])\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure)\n  }\n\n  const onSuccess = (response) => {\n    updateUsers(response.data['users'])\n  }\n\n  const onFailure = (error) => {\n    message.error('Failed to fetch users')\n  }\n\n  const columns = () => {\n    let list = []\n    list.push({\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name'\n    })\n    list.push({\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name'\n    })\n    list.push({\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    })\n    list.push({\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address'\n    })\n    list.push({\n      title: 'City',\n      dataIndex: 'city',\n      key: 'city'\n    })\n    list.push({\n      title: 'State',\n      dataIndex: 'state',\n      key: 'state'\n    })\n    list.push({\n      title: 'Zip',\n      dataIndex: 'zip',\n      key: 'zip'\n    })\n    list.push({\n      title: 'Tags',\n      dataIndex: 'tags',\n      key: 'tags'\n    })\n    list.push({\n      title: 'Action',\n      render: (record) => {\n        return <Button type='link'>Edit</Button>\n      }\n    })\n    return list\n  }\n\n  if (!users) { return null }\n\n  return(\n    <Table columns={columns()} dataSource={users} pagination={false} />\n  )\n}\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}