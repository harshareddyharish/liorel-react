{"ast":null,"code":"var _jsxFileName = \"/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button, Tag } from \"antd\";\nimport Api from \"../services/api\";\nimport UserModal from \"../../src/components/UserModal\";\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined);\n  const [openUserModal, toggleUserModal] = useState(false);\n  const [user, updateUser] = useState(undefined);\n  const [tags, updateTags] = useState(undefined);\n  useEffect(() => {\n    fetchUsers();\n    fetchTags();\n  }, []);\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure);\n  };\n\n  const onSuccess = response => {\n    updateUsers(response.data[\"users\"]);\n  };\n\n  const onFailure = error => {\n    message.error(\"Failed to fetch users\");\n  };\n\n  const fetchTags = () => {\n    Api.fetchTags({}, onTagsSuccess, onTagsFailure);\n  };\n\n  const onTagsSuccess = response => {\n    updateTags(response.data[\"tags\"]);\n  };\n\n  const onTagsFailure = error => {\n    message.error(\"Failed to fetch tags\");\n  };\n\n  const closeModal = () => {\n    toggleUserModal(false);\n    updateUser(undefined);\n  };\n\n  const onSaveUser = () => {\n    fetchUsers();\n    closeModal();\n  };\n\n  const editUser = record => {\n    updateUser(record);\n    toggleUserModal(true);\n  };\n\n  const tagName = tagId => {\n    if (tags) {\n      let tag = tags.find(tag => tag['id'] === tagId);\n\n      if (tag) {\n        return tag[\"name\"];\n      }\n\n      return tagId;\n    }\n  };\n\n  const columns = () => {\n    let list = [];\n    list.push({\n      title: \"First Name\",\n      dataIndex: \"first_name\",\n      key: \"first_name\"\n    });\n    list.push({\n      title: \"Last Name\",\n      dataIndex: \"last_name\",\n      key: \"last_name\"\n    });\n    list.push({\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    });\n    list.push({\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\"\n    });\n    list.push({\n      title: \"City\",\n      dataIndex: \"city\",\n      key: \"city\"\n    });\n    list.push({\n      title: \"State\",\n      dataIndex: \"state\",\n      key: \"state\"\n    });\n    list.push({\n      title: \"Zip\",\n      dataIndex: \"zip\",\n      key: \"zip\"\n    });\n    list.push({\n      title: \"Tags\",\n      dataIndex: \"tags\",\n      key: \"tags\",\n      render: (tags, record) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, tags.map(tag => /*#__PURE__*/React.createElement(Tag, {\n          color: \"green\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }\n        }, tagName(tag.id))));\n      }\n    });\n    list.push({\n      title: \"Action\",\n      render: record => {\n        return /*#__PURE__*/React.createElement(Button, {\n          type: \"link\",\n          onClick: () => editUser(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }\n        }, \"Edit\");\n      }\n    });\n    return list;\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mb: \"20px\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => toggleUserModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Add User\")), users && /*#__PURE__*/React.createElement(Table, {\n    columns: columns(),\n    dataSource: users,\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), openUserModal && /*#__PURE__*/React.createElement(UserModal, {\n    user: user,\n    tags: tags,\n    closeModal: closeModal,\n    onSaveUser: onSaveUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UsersPage;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js"],"names":["React","useState","useEffect","Flex","Box","Table","message","Button","Tag","Api","UserModal","UsersPage","users","updateUsers","undefined","openUserModal","toggleUserModal","user","updateUser","tags","updateTags","fetchUsers","fetchTags","onSuccess","onFailure","response","data","error","onTagsSuccess","onTagsFailure","closeModal","onSaveUser","editUser","record","tagName","tagId","tag","find","columns","list","push","title","dataIndex","key","render","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button, Tag } from \"antd\";\nimport Api from \"../services/api\";\nimport UserModal from \"../../src/components/UserModal\";\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined);\n  const [openUserModal, toggleUserModal] = useState(false);\n  const [user, updateUser] = useState(undefined);\n  const [tags, updateTags] = useState(undefined);\n\n  useEffect(() => {\n    fetchUsers();\n    fetchTags();\n  }, []);\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure);\n  };\n\n  const onSuccess = (response) => {\n    updateUsers(response.data[\"users\"]);\n  };\n\n  const onFailure = (error) => {\n    message.error(\"Failed to fetch users\");\n  };\n\n  const fetchTags = () => {\n    Api.fetchTags({}, onTagsSuccess, onTagsFailure);\n  };\n\n  const onTagsSuccess = (response) => {\n    updateTags(response.data[\"tags\"]);\n  };\n\n  const onTagsFailure = (error) => {\n    message.error(\"Failed to fetch tags\");\n  };\n\n  const closeModal = () => {\n    toggleUserModal(false);\n    updateUser(undefined);\n  };\n\n  const onSaveUser = () => {\n    fetchUsers();\n    closeModal();\n  };\n\n  const editUser = (record) => {\n    updateUser(record);\n    toggleUserModal(true);\n  };\n\n  const tagName = (tagId) => {\n    if (tags) {\n    let tag = tags.find((tag) => tag['id'] === tagId);\n    if (tag) {\n      return tag[\"name\"];\n    }\n    return tagId;\n  } \n  };\n\n  const columns = () => {\n    let list = [];\n    list.push({\n      title: \"First Name\",\n      dataIndex: \"first_name\",\n      key: \"first_name\",\n    });\n    list.push({\n      title: \"Last Name\",\n      dataIndex: \"last_name\",\n      key: \"last_name\",\n    });\n    list.push({\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    });\n    list.push({\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n    });\n    list.push({\n      title: \"City\",\n      dataIndex: \"city\",\n      key: \"city\",\n    });\n    list.push({\n      title: \"State\",\n      dataIndex: \"state\",\n      key: \"state\",\n    });\n    list.push({\n      title: \"Zip\",\n      dataIndex: \"zip\",\n      key: \"zip\",\n    });\n    list.push({\n      title: \"Tags\",\n      dataIndex: \"tags\",\n      key: \"tags\",\n      render: (tags, record) => {\n        return(<>\n          {tags.map((tag) => (\n            <Tag color=\"green\">{tagName(tag.id)}</Tag>\n          ))}\n        </>);\n      },\n    });\n    list.push({\n      title: \"Action\",\n      render: (record) => {\n        return (\n          <Button type=\"link\" onClick={() => editUser(record)}>\n            Edit\n          </Button>\n        );\n      },\n    });\n    return list;\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return (\n    <Box>\n      <Flex mb=\"20px\" justifyContent=\"flex-end\">\n        <Button type=\"primary\" onClick={() => toggleUserModal(true)}>\n          Add User\n        </Button>\n      </Flex>\n      {users && (\n        <Table columns={columns()} dataSource={users} pagination={false} />\n      )}\n      {openUserModal && (\n        <UserModal\n          user={user}\n          tags={tags}\n          closeModal={closeModal}\n          onSaveUser={onSaveUser}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}