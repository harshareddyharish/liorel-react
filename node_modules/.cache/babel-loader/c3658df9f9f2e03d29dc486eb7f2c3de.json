{"ast":null,"code":"var _jsxFileName = \"/Users/ekincare/Desktop/harish/liorel-react/src/pages/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { storeToken, storeStaff, storePermissions } from \"../Auth\";\nimport { HOST } from \"../Url\";\nimport Form from \"antd/lib/form\";\nimport { Icon, Input, Button } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.handleLogin(values.username, values.password);\n        }\n      });\n    };\n\n    this.state = {\n      loggedIn: false,\n      hasErrors: false\n    };\n  }\n\n  handleLogin(email, password) {\n    let that = this;\n    axios.post(HOST + \"/sign_in\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      let key = response.headers[\"USER-TOKEN\"];\n\n      if (key !== undefined && key.length > 20) {\n        storeToken(response.headers[\"USER-TOKEN\"]);\n        storeStaff(\"USER_ID\", response.data[\"user\"][\"id\"]);\n        storeStaff(\"USER_NAME\", response.data[\"user\"][\"name\"]);\n        storeStaff(\"USER_EMAIL\", response.data[\"user\"][\"email\"]);\n        that.setState({\n          loggedIn: true,\n          hasErrors: false\n        }, () => {\n          window.location.href = \"/users\";\n        });\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response.status);\n        that.setState({\n          hasErrors: true\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  renderForm() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n    const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n    return /*#__PURE__*/React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, {\n      validateStatus: usernameError ? \"error\" : \"\",\n      help: usernameError || \"\",\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"Please input your email!\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      }),\n      placeholder: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      validateStatus: passwordError ? \"error\" : \"\",\n      help: passwordError || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input.Password, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }),\n      type: \"password\",\n      placeholder: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      disabled: hasErrors(getFieldsError()),\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Log in\")), this.state.hasErrors && /*#__PURE__*/React.createElement(FormItem, {\n      style: {\n        color: \"#FF0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Invalid username or Password\"));\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return this.renderForm();\n    }\n  }\n\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\nexport default WrappedLoginForm;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/pages/LoginForm.js"],"names":["React","Component","axios","storeToken","storeStaff","storePermissions","HOST","Form","Icon","Input","Button","Redirect","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","LoginForm","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","handleLogin","username","password","state","loggedIn","email","that","post","then","response","key","headers","undefined","length","data","setState","window","location","href","catch","error","console","log","status","componentDidMount","renderForm","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","marginBottom","rules","required","message","fontSize","color","render","WrappedLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  storeToken,\n  storeStaff,\n  storePermissions\n} from \"../Auth\";\nimport { HOST } from \"../Url\";\nimport Form from \"antd/lib/form\";\nimport { Icon, Input, Button } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedIn: false, hasErrors: false };\n  }\n\n  handleLogin(email, password) {\n    let that = this;\n    axios\n      .post(HOST + \"/sign_in\", { email: email, password: password })\n      .then(function(response) {\n        let key = response.headers[\"USER-TOKEN\"];\n        if (key !== undefined && key.length > 20) {\n          storeToken(response.headers[\"USER-TOKEN\"]);\n          storeStaff(\"USER_ID\", response.data[\"user\"][\"id\"]);\n          storeStaff(\"USER_NAME\", response.data[\"user\"][\"name\"]);\n          storeStaff(\"USER_EMAIL\", response.data[\"user\"][\"email\"]);\n\n          that.setState({ loggedIn: true, hasErrors: false }, () => {\n            window.location.href = \"/users\";\n          });\n        }\n      })\n      .catch(function(error) {\n        if (error.response) {\n          console.log(error.response.status);\n          that.setState({ hasErrors: true });\n        }\n      });\n  }\n\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.handleLogin(values.username, values.password);\n      }\n    });\n  };\n  renderForm() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    const usernameError =\n      isFieldTouched(\"username\") && getFieldError(\"username\");\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    return (\n      <Form layout=\"inline\" onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem\n          validateStatus={usernameError ? \"error\" : \"\"}\n          help={usernameError || \"\"}\n          style={{ marginBottom: 20 }}\n        >\n          {getFieldDecorator(\"username\", {\n            rules: [{ required: true, message: \"Please input your email!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\n              placeholder=\"email\"\n            />\n          )}\n        </FormItem>\n        <FormItem\n          validateStatus={passwordError ? \"error\" : \"\"}\n          help={passwordError || \"\"}\n        >\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input.Password\n              prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\n              type=\"password\"\n              placeholder=\"password\"\n            />\n          )}\n        </FormItem>\n        <br />\n        <br />\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n            disabled={hasErrors(getFieldsError())}\n            block\n          >\n            Log in\n          </Button>\n        </FormItem>\n\n        {this.state.hasErrors && (\n          <FormItem style={{ color: \"#FF0000\" }}>\n            Invalid username or Password\n          </FormItem>\n        )}\n      </Form>\n    );\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return <Redirect to={\"/\"} />;\n    } else {\n      return this.renderForm();\n    }\n  }\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n\nexport default WrappedLoginForm;\n"]},"metadata":{},"sourceType":"module"}