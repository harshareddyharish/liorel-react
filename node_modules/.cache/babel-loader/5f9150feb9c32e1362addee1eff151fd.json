{"ast":null,"code":"var _jsxFileName = \"/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button, Tag, Modal, Popover } from \"antd\";\nimport Api from \"../services/api\";\nimport UserModal from \"../../src/components/UserModal\";\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined);\n  const [openUserModal, toggleUserModal] = useState(false);\n  const [user, updateUser] = useState(undefined);\n  const [tags, updateTags] = useState(undefined);\n  const [sortedInfo, updateSortInfo] = useState(null);\n  useEffect(() => {\n    fetchUsers();\n    fetchTags();\n  }, []);\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure);\n  };\n\n  const onSuccess = response => {\n    updateUsers(response.data[\"users\"]);\n  };\n\n  const onFailure = error => {\n    message.error(\"Failed to fetch users\");\n  };\n\n  const fetchTags = () => {\n    Api.fetchTags({}, onTagsSuccess, onTagsFailure);\n  };\n\n  const onTagsSuccess = response => {\n    updateTags(response.data[\"tags\"]);\n  };\n\n  const onTagsFailure = error => {\n    message.error(\"Failed to fetch tags\");\n  };\n\n  const closeModal = () => {\n    toggleUserModal(false);\n    updateUser(undefined);\n  };\n\n  const onSaveUser = () => {\n    fetchUsers();\n    closeModal();\n  };\n\n  const editUser = record => {\n    updateUser(record);\n    toggleUserModal(true);\n  };\n\n  const deleteUser = record => {\n    Modal.confirm({\n      icon: \"\",\n      title: \"Are you sure want to delete this user?\",\n      onOk: () => onDeleteUser(record)\n    });\n  };\n\n  const onDeleteUser = record => {\n    Api.deleteUser({\n      userId: record[\"id\"]\n    }, onDeleteSuccess, onDeleteFailure);\n  };\n\n  const onDeleteSuccess = () => {\n    message.success(\"Successfully user deleted\");\n    fetchUsers();\n  };\n\n  const onDeleteFailure = error => {\n    if (error.response.data) {\n      message.error(error.response.data[\"message\"]);\n    } else {\n      message.error(\"Failed to delete user\");\n    }\n  };\n\n  const activateorDeactivateUser = record => {\n    Api.updateUser({\n      id: record[\"id\"],\n      data: {\n        user: {\n          active: record.active ? false : true\n        }\n      }\n    }, onStatuChangeSuccess, onStatuChangeFailure);\n  };\n\n  const onStatuChangeSuccess = () => {\n    message.success(\"Successfully update the status\");\n    fetchUsers();\n  };\n\n  const onStatuChangeFailure = error => {\n    if (error.response.data) {\n      message.error(error.response.data[\"message\"]);\n    } else {\n      message.error(\"Failed to change the status\");\n    }\n  };\n\n  const tagName = tagId => {\n    if (tags) {\n      let tag = tags.find(tag => tag[\"id\"] === tagId);\n\n      if (tag) {\n        return tag[\"name\"];\n      }\n\n      return tagId;\n    }\n  };\n\n  const handleChange = (pagination, filters, sorter) => {\n    updateSortInfo(sorter);\n  };\n\n  const columns = () => {\n    let list = [];\n    let sortInfo = sortedInfo || {\n      columnKey: 'first_name',\n      order: 'ascend'\n    };\n    list.push({\n      title: \"First Name\",\n      dataIndex: \"first_name\",\n      key: \"first_name\",\n      sorter: (a, b) => String(a.first_name).toLowerCase().length - String(b.first_name).toLowerCase().length,\n      sortOrder: sortInfo.columnKey === 'first_name' && sortInfo.order\n    });\n    list.push({\n      title: \"Last Name\",\n      dataIndex: \"last_name\",\n      key: \"last_name\",\n      sorter: (a, b) => String(a.last_name).length - String(b.last_name).length,\n      sortOrder: sortInfo.columnKey === 'last_name' && sortInfo.order\n    });\n    list.push({\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n      sorter: (a, b) => String(a.email).length - String(b.email).length,\n      sortOrder: sortInfo.columnKey === 'email' && sortInfo.order\n    });\n    list.push({\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n      render: address => {\n        return /*#__PURE__*/React.createElement(Popover, {\n          content: address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }\n        }, address.substring(0, 10), \"...\"));\n      }\n    });\n    list.push({\n      title: \"City\",\n      dataIndex: \"city\",\n      key: \"city\"\n    });\n    list.push({\n      title: \"State\",\n      dataIndex: \"state\",\n      key: \"state\"\n    });\n    list.push({\n      title: \"Zip\",\n      dataIndex: \"zip\",\n      key: \"zip\"\n    });\n    list.push({\n      title: \"Updated at\",\n      dataIndex: \"updated_at\",\n      key: \"updated_at\",\n      sorter: (a, b) => new Date(b.updated_at) - new Date(a.updated_at),\n      sortOrder: sortInfo.columnKey === 'updated_at' && sortInfo.order,\n      render: updated_at => {\n        let d = new Date(updated_at);\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }\n        }, d.getFullYear(), \"-\", d.getMonth(), \"-\", d.getDate(), \" \", d.getHours(), \":\", d.getMinutes());\n      }\n    });\n    list.push({\n      title: \"Tags\",\n      dataIndex: \"tags\",\n      key: \"tags\",\n      render: (tags, record) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, tags.map(tag => /*#__PURE__*/React.createElement(Tag, {\n          color: \"green\",\n          style: {\n            marginBottom: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }\n        }, tagName(tag))));\n      }\n    });\n    list.push({\n      title: \"Actions\",\n      render: record => {\n        return /*#__PURE__*/React.createElement(Flex, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"link\",\n          onClick: () => editUser(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n          type: \"link\",\n          onClick: () => activateorDeactivateUser(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }\n        }, record.active ? \"Deactivate\" : \"Activate\"), /*#__PURE__*/React.createElement(Button, {\n          type: \"link\",\n          onClick: () => deleteUser(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }\n        }, \"Delete\"));\n      }\n    });\n    return list;\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mb: \"20px\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => toggleUserModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, \"Add User\")), users && /*#__PURE__*/React.createElement(Table, {\n    columns: columns(),\n    dataSource: users,\n    pagination: false,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }), openUserModal && /*#__PURE__*/React.createElement(UserModal, {\n    user: user,\n    tags: tags,\n    closeModal: closeModal,\n    onSaveUser: onSaveUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UsersPage;","map":{"version":3,"sources":["/Users/ekincare/Desktop/harish/liorel-react/src/pages/UsersPage.js"],"names":["React","useState","useEffect","Flex","Box","Table","message","Button","Tag","Modal","Popover","Api","UserModal","UsersPage","users","updateUsers","undefined","openUserModal","toggleUserModal","user","updateUser","tags","updateTags","sortedInfo","updateSortInfo","fetchUsers","fetchTags","onSuccess","onFailure","response","data","error","onTagsSuccess","onTagsFailure","closeModal","onSaveUser","editUser","record","deleteUser","confirm","icon","title","onOk","onDeleteUser","userId","onDeleteSuccess","onDeleteFailure","success","activateorDeactivateUser","id","active","onStatuChangeSuccess","onStatuChangeFailure","tagName","tagId","tag","find","handleChange","pagination","filters","sorter","columns","list","sortInfo","columnKey","order","push","dataIndex","key","a","b","String","first_name","toLowerCase","length","sortOrder","last_name","email","render","address","substring","Date","updated_at","d","getFullYear","getMonth","getDate","getHours","getMinutes","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport { Table, message, Button, Tag, Modal, Popover } from \"antd\";\nimport Api from \"../services/api\";\nimport UserModal from \"../../src/components/UserModal\";\n\nconst UsersPage = () => {\n  const [users, updateUsers] = useState(undefined);\n  const [openUserModal, toggleUserModal] = useState(false);\n  const [user, updateUser] = useState(undefined);\n  const [tags, updateTags] = useState(undefined);\n  const [sortedInfo,  updateSortInfo] = useState(null)\n\n  useEffect(() => {\n    fetchUsers();\n    fetchTags();\n  }, []);\n\n  const fetchUsers = () => {\n    Api.fetchUsers({}, onSuccess, onFailure);\n  };\n\n  const onSuccess = (response) => {\n    updateUsers(response.data[\"users\"]);\n  };\n\n  const onFailure = (error) => {\n    message.error(\"Failed to fetch users\");\n  };\n\n  const fetchTags = () => {\n    Api.fetchTags({}, onTagsSuccess, onTagsFailure);\n  };\n\n  const onTagsSuccess = (response) => {\n    updateTags(response.data[\"tags\"]);\n  };\n\n  const onTagsFailure = (error) => {\n    message.error(\"Failed to fetch tags\");\n  };\n\n  const closeModal = () => {\n    toggleUserModal(false);\n    updateUser(undefined);\n  };\n\n  const onSaveUser = () => {\n    fetchUsers();\n    closeModal();\n  };\n\n  const editUser = (record) => {\n    updateUser(record);\n    toggleUserModal(true);\n  };\n\n  const deleteUser = (record) => {\n    Modal.confirm({\n      icon: \"\",\n      title: \"Are you sure want to delete this user?\",\n      onOk: () => onDeleteUser(record),\n    });\n  };\n\n  const onDeleteUser = (record) => {\n    Api.deleteUser({ userId: record[\"id\"] }, onDeleteSuccess, onDeleteFailure);\n  };\n\n  const onDeleteSuccess = () => {\n    message.success(\"Successfully user deleted\");\n    fetchUsers();\n  };\n\n  const onDeleteFailure = (error) => {\n    if (error.response.data) {\n      message.error(error.response.data[\"message\"]);\n    } else {\n      message.error(\"Failed to delete user\");\n    }\n  };\n\n  const activateorDeactivateUser = (record) => {\n    Api.updateUser(\n      {\n        id: record[\"id\"],\n        data: { user: { active: record.active ? false : true } },\n      },\n      onStatuChangeSuccess,\n      onStatuChangeFailure\n    );\n  };\n\n  const onStatuChangeSuccess = () => {\n    message.success(\"Successfully update the status\");\n    fetchUsers();\n  };\n\n  const onStatuChangeFailure = (error) => {\n    if (error.response.data) {\n      message.error(error.response.data[\"message\"]);\n    } else {\n      message.error(\"Failed to change the status\");\n    }\n  };\n\n  const tagName = (tagId) => {\n    if (tags) {\n      let tag = tags.find((tag) => tag[\"id\"] === tagId);\n      if (tag) {\n        return tag[\"name\"];\n      }\n      return tagId;\n    }\n  };\n\n  const handleChange = (pagination, filters, sorter) => {\n    updateSortInfo(sorter)\n  };\n\n  const columns = () => {\n    let list = [];\n    let sortInfo = sortedInfo || { columnKey: 'first_name', order: 'ascend'};\n    list.push({\n      title: \"First Name\",\n      dataIndex: \"first_name\",\n      key: \"first_name\",\n      sorter: (a, b) => String(a.first_name).toLowerCase().length - String(b.first_name).toLowerCase().length,\n      sortOrder: sortInfo.columnKey === 'first_name' && sortInfo.order,\n    });\n    list.push({\n      title: \"Last Name\",\n      dataIndex: \"last_name\",\n      key: \"last_name\",\n      sorter: (a, b) => String(a.last_name).length - String(b.last_name).length,\n      sortOrder: sortInfo.columnKey === 'last_name' && sortInfo.order,\n    });\n    list.push({\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n      sorter: (a, b) => String(a.email).length - String(b.email).length,\n      sortOrder: sortInfo.columnKey === 'email' && sortInfo.order,\n    });\n    list.push({\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n      render: (address) => {\n        return(\n          <Popover content={address}>\n            <Box>{address.substring(0,10)}...</Box>\n          </Popover>\n        )\n      }\n    });\n    list.push({\n      title: \"City\",\n      dataIndex: \"city\",\n      key: \"city\",\n    });\n    list.push({\n      title: \"State\",\n      dataIndex: \"state\",\n      key: \"state\",\n    });\n    list.push({\n      title: \"Zip\",\n      dataIndex: \"zip\",\n      key: \"zip\",\n    });\n    list.push({\n      title: \"Updated at\",\n      dataIndex: \"updated_at\",\n      key: \"updated_at\",\n      sorter: (a, b) => new Date(b.updated_at) - new Date(a.updated_at),\n      sortOrder: sortInfo.columnKey === 'updated_at' && sortInfo.order,\n      render: (updated_at) => {\n        let d = new Date(updated_at)\n        return(\n          <p>{d.getFullYear()}-{d.getMonth()}-{d.getDate()} {d.getHours()}:{d.getMinutes()}</p>\n        )\n      }\n    });\n    list.push({\n      title: \"Tags\",\n      dataIndex: \"tags\",\n      key: \"tags\",\n      render: (tags, record) => {\n        return (\n          <>\n            {tags.map((tag) => (\n              <Tag color=\"green\" style={{ marginBottom: 5 }}>\n                {tagName(tag)}\n              </Tag>\n            ))}\n          </>\n        );\n      },\n    });\n    list.push({\n      title: \"Actions\",\n      render: (record) => {\n        return (\n          <Flex>\n            <Button type=\"link\" onClick={() => editUser(record)}>\n              Edit\n            </Button>\n            <Button\n              type=\"link\"\n              onClick={() => activateorDeactivateUser(record)}\n            >\n              {record.active ? \"Deactivate\" : \"Activate\"}\n            </Button>\n            <Button type=\"link\" onClick={() => deleteUser(record)}>\n              Delete\n            </Button>\n          </Flex>\n        );\n      },\n    });\n    return list;\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return (\n    <Box>\n      <Flex mb=\"20px\" justifyContent=\"flex-end\">\n        <Button type=\"primary\" onClick={() => toggleUserModal(true)}>\n          Add User\n        </Button>\n      </Flex>\n      {users && (\n        <Table columns={columns()} dataSource={users} pagination={false} onChange={handleChange}/>\n      )}\n      {openUserModal && (\n        <UserModal\n          user={user}\n          tags={tags}\n          closeModal={closeModal}\n          onSaveUser={onSaveUser}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}